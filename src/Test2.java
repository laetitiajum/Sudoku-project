
public class Test2 {
	public static void main(String[] args) {
		int MAX=50;
		
		int[][] M ={
		        {0,4,5,0,0,7,3,0,0},
		        {0,9,0,3,1,0,0,0,7},
		        {2,0,3,0,9,0,0,0,0},
		        {6,0,0,0,0,8,7,9,1},
		        {9,8,0,0,0,0,0,5,3},
		        {5,2,7,1,0,0,0,0,6},
		        {0,0,0,0,5,0,8,0,4},
		        {7,0,0,0,4,3,0,1,0},
		        {0,0,9,7,0,0,6,3,0}
		    };
		
		System.out.println("M");
		
		DancingLinksSolver m = new DancingLinksSolver(3, M);
		m.solve(MAX);
		
		int[][] N ={
		        {9,0,0,1,0,0,0,0,5},
		        {0,0,5,0,9,0,2,0,1},
		        {8,0,0,0,4,0,0,0,0},
		        {0,0,0,0,8,0,0,0,0},
		        {0,0,0,7,0,0,0,0,0},
		        {0,0,0,0,2,6,0,0,9},
		        {2,0,0,3,0,0,0,0,6},
		        {0,0,0,2,0,0,9,0,0},
		        {0,0,1,9,0,4,5,7,0}
		    };
		
		System.out.println("N");
		
		DancingLinksSolver n = new DancingLinksSolver(3, N);
		n.solve(MAX);
		
		
		int[][] Q ={
		        {9,6,3,1,7,2,0,0,5},
		        {0,0,5,0,9,0,2,0,1},
		        {8,0,0,0,4,0,0,0,3},
		        {0,0,0,0,8,0,0,0,0},
		        {0,0,0,7,0,0,0,0,4},
		        {1,7,8,0,2,6,0,0,9},
		        {2,0,0,3,0,0,0,0,6},
		        {0,0,0,2,0,0,9,0,0},
		        {0,0,1,9,0,4,5,7,0}
		    };
		
		System.out.println("Q");
		
		DancingLinksSolver q = new DancingLinksSolver(3, Q);
		q.solveAfficher(MAX);
		
		
		int[][] P ={
		        {9,0,0,1,0,0,0,0,0},
		        {0,0,5,0,9,0,2,4,1},
		        {8,0,0,0,4,0,0,0,0},
		        {0,0,0,0,8,0,0,0,0},
		        {0,0,0,7,0,0,0,0,0},
		        {5,7,8,0,2,6,0,0,9},
		        {2,5,0,3,7,0,0,0,6},
		        {7,0,0,2,5,0,9,1,0},
		        {0,0,1,9,0,4,5,7,0}
		    };
		
		System.out.println("P");
		
		DancingLinksSolver p = new DancingLinksSolver(3, P);
		p.solve(MAX);
		
		
		int[][] O ={
		        {5,3,0,0,7,0,0,0,6},
		        {6,0,0,1,9,5,0,0,0},
		        {0,9,8,0,0,0,0,6,0},
		        {8,0,0,0,6,0,0,0,3},
		        {4,0,0,8,0,3,0,0,1},
		        {7,0,0,0,2,0,0,0,6},
		        {0,6,0,0,0,0,2,8,0},
		        {0,0,0,4,1,9,0,0,5},
		        {0,0,0,0,8,0,0,7,9}
		    };
		
		System.out.println("O");
		
		DancingLinksSolver o = new DancingLinksSolver(3, O);
		o.solve(MAX);
		
		
		int[][] D ={
		        {0,0,5,0,0,0,0,0,7},
		        {4,0,0,2,0,7,0,0,0},
		        {6,2,0,0,0,0,8,0,0},
		        {0,7,0,0,6,0,0,0,9},
		        {2,6,0,0,9,0,0,5,4},
		        {9,0,0,0,2,0,0,1,0},
		        {0,0,6,0,0,0,0,3,8},
		        {0,0,0,5,0,9,0,0,1},
		        {7,0,0,0,0,0,9,0,0}
		    };
		
		long t1=System.currentTimeMillis();
		System.out.println("D");
		
		DancingLinksSolver d = new DancingLinksSolver(3, D);		
		d.solve(MAX);
		long t2=System.currentTimeMillis();
		System.out.println(t2-t1);
		
		int[][] E = {
				{0, 0, 6, 0, 9, 11, 12, 0, 0, 0, 14, 16, 0, 3, 5, 4}, 
				{0, 3, 2, 0, 0, 4, 0, 0, 10, 8, 0, 9, 7, 1, 12, 0}, 
				{0, 7, 0, 11, 0, 0, 0, 10, 0, 0, 0, 0, 8, 0, 0, 0}, 
				{14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 10},
				{5, 0, 0, 0, 7, 0, 10, 0, 12, 6, 0, 0, 1, 0, 13, 0}, 
				{0, 6, 10, 0, 11, 3, 0, 0, 0, 0, 0, 4, 0, 0, 7, 0}, 
				{0, 15, 0, 0, 0, 0, 0, 9, 5, 0, 0, 3, 4, 0, 0, 0},
				{0, 0, 0, 16, 12, 2, 0, 5, 15, 0, 0, 0, 3, 0, 0, 8},
				{0, 4, 0, 0, 0, 12, 0, 8, 1, 7, 10, 0, 0, 0, 15, 0},
				{10, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 14, 0, 0},
				{15, 0, 0, 0, 1, 0, 4, 2, 0, 0, 0, 0, 10, 0, 0, 0},
				{0, 0, 0, 0, 0, 0, 7, 15, 0, 3, 0, 0, 6, 0, 0, 0},
				{13, 14, 0, 0, 0, 0, 9, 11, 0, 0, 8, 0, 15, 0, 6, 1},
				{0, 12, 5, 0, 0, 8, 0, 0, 7, 4, 0, 0, 0, 0, 0, 11}, 
				{0, 0, 0, 1, 0, 0, 16, 0, 0, 0, 3, 0, 0, 0, 9, 0},
				{0, 0, 9, 8, 6, 14, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0,}
			};
		
		System.out.println("E");
		
		DancingLinksSolver e = new DancingLinksSolver(4, E);
		e.solveAfficher(2);
		
		
		final int[][] vide ={
		        {0,0,0,0,0,0,0,0,0},
		        {0,0,0,0,0,0,0,0,0},
		        {0,0,0,0,0,0,0,0,0},
		        {0,0,0,0,0,0,0,0,0},
		        {0,0,0,0,0,0,0,0,0},
		        {0,0,0,0,0,0,0,0,0},
		        {0,0,0,0,0,0,0,0,0},
		        {0,0,0,0,0,0,0,0,0},
		        {0,0,0,0,0,0,0,0,0}
		    };
		
		System.out.println("vide");
		
		DancingLinksSolver v = new DancingLinksSolver(3, vide);
		v.solve(10);
		
		
	}
	

}
